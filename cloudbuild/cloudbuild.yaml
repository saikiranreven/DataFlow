steps:
  - id: 'terraform-init'
    name: 'hashicorp/terraform:1.5.7'
    args: ['init']
    dir: 'terraform'

  - id: 'terraform-apply'
    name: 'hashicorp/terraform:1.5.7'
    args: ['apply', '-auto-approve']
    dir: 'terraform'
    waitFor: ['terraform-init']

  - id: 'build-publisher'
    name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/pubsub-publisher',
      '-f', 'publisher/Dockerfile',
      'publisher/'
    ]
    waitFor: ['terraform-apply']

  - id: 'push-publisher'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pubsub-publisher']
    waitFor: ['build-publisher']

  - id: 'deploy-publisher'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy pubsub-publisher \
          --image=gcr.io/$PROJECT_ID/pubsub-publisher \
          --region=us-central1 \
          --platform=managed \
          --no-allow-unauthenticated \
          --set-env-vars="PROJECT_ID=$PROJECT_ID,TOPIC_NAME=stream-topic"
    waitFor: ['push-publisher']

  - id: 'deploy-dataflow'
    name: 'python:3.10'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        pip install apache-beam[gcp]==2.54.0
        python dataflow/pipeline.py \
          --project=$PROJECT_ID \
          --region=us-central1 \
          --input_topic=projects/$PROJECT_ID/topics/stream-topic \
          --output_table=$PROJECT_ID:streaming_dataset.user_events \
          --output_path=gs://$PROJECT_ID-raw-backup/raw/events \
          --temp_location=gs://$PROJECT_ID-raw-backup/temp \
          --staging_location=gs://$PROJECT_ID-raw-backup/staging

options:
  logging: CLOUD_LOGGING_ONLY
timeout: 1800s